:CONFIG:
#+hugo_base_dir: ../
#+seq_todo: TODO DRAFT DONE FIXME
#+options: creator:t
#+macro: updatetime {{{time(%B %e\, %Y)}}}
:END:

#+title: Blog Source File
#+author: Prashant Tak

* TODO Fix Time, section, Add dark mode toggle...
* About
:PROPERTIES:
:EXPORT_FILE_NAME: about
:EXPORT_HUGO_SECTION: about
:END:

Hi! Take 1

* Blog
:PROPERTIES:
:EXPORT_HUGO_SECTION: blog
:END:

** DRAFT Morphosyntactic Tagging with a Meta-BiLSTM Model over Context Sensitive Token Encodings - An Overview
:PROPERTIES:
:EXPORT_FILE_NAME: nnfl-paper
:END:
*** Abstract
1. RNN leads to advances in speech tagging accuracy [[https://www.aclweb.org/anthology/K18-2001.pdf][Zeman et al]]
2. Common thing among models, /rich initial word encodings/. (What does encoding, maybe related to RNN)
3. Encodings are composed of recurrent character-based representation with learned and pre-trained word embeddings. (What are embeddings here)
4. Problem with the encodings, context restriced to a single word hence only via subsequent recurrent layers the word information is processed.
5. The paper deals with models that use RNN with sentence-level context.
6. This provides results via synchronized training with a meta-model that learns to combine their states.
7. Results are provided on part-of-speech and morphological tagging[fn:1] with great performance on a number of languages.
*** Terms
1. Morphosyntactic = Morphology + Syntax and Morphology is study of words, how they are formed, and their relationship to other words in the same language.
2. [[https://medium.datadriveninvestor.com/how-do-lstm-networks-solve-the-problem-of-vanishing-gradients-a6784971a577][RNN]]: [[https://arxiv.org/pdf/1211.5063.pdf][On difficulty of training RNNs]]
3. [[http://colah.github.io/posts/2015-08-Understanding-LSTMs/][LSTM]]: Long Short-Term Memory is a type of RNN that addresses the vanishing gradient problem through additional cells, input and output gates.
4. BiLSTM: It is a sequence processing model that consists of two LSTMs. They effectively increase the amount of information available to the network, improving the context available to the algorithm (e.g. knowing what words immediately follow and precede a word in a sentence).

*** Readings and Resources
1. Pytorch: [[https://pytorch.org/tutorials/beginner/nn_tutorial.html][Beginner Guide]], [[https://deeplizard.com/learn/playlist/PLZbbT5o_s2xrfNyHZsM6ufI0iZENK9xgG][Detailed Guides]], [[https://www.cs.toronto.edu//~lczhang/360/][Notebook form]]
2. Math: [[https://explained.ai/matrix-calculus/index.html][Matrix Calculus]], [[https://mml-book.com/][Book]]
3. Basics:
   + [[https://www.kaggle.com/learn/python][Python]]
   + [[https://realpython.com/jupyter-notebook-introduction/#getting-up-and-running-with-jupyter-notebook][Jupyter]]
   + [[http://cs231n.github.io/python-numpy-tutorial/#numpy][Numpy]], [[https://nbviewer.jupyter.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-2-Numpy.ipynb][Numpy 2]]
   + [[https://mlcourse.ai/articles/topic1-exploratory-data-analysis-with-pandas/][Pandas]], [[https://www.kaggle.com/learn/pandas][Pandas 2]]
   + [[https://mlcourse.ai/articles/topic2-visual-data-analysis-in-python/][Matplotlib]], [[https://matplotlib.org/matplotblog/posts/an-inquiry-into-matplotlib-figures/][Matplotlib 2]]
   + [[https://mlcourse.ai/articles/topic2-part2-seaborn-plotly/][Seaborn]]
   + [[http://scipy-lectures.org/][Overview]]
4. Interactive Tutorials on [[https://www.deeplearning.ai/ai-notes/initialization/][Weight Initialization]], [[https://www.deeplearning.ai/ai-notes/optimization/][Different Optimizers]]
5. Rougier's Bits
   + [[https://github.com/rougier/matplotlib-tutorial][Matplotlib Tutorial]], [[https://github.com/matplotlib/cheatsheets][Matplotlib Cheatsheets]]
   + [[https://github.com/rougier/numpy-tutorial][Numpy Tutorial]], [[https://www.labri.fr/perso/nrougier/from-python-to-numpy/][From Python to Numpy]], [[https://github.com/rougier/numpy-100][100 Numpy Exercises]]
   + [[https://www.labri.fr/perso/nrougier/python-opengl/][Python & OpenGL for Scientific Visualization]], [[https://github.com/rougier/scientific-visualization-book][Scientific Visualization]]
*** Footnotes
[fn:1] Morphological tagging is the task of assigning labels to a sequence of tokens that describe them morphologically. As compared to Part-of-speech tagging, morphological tagging also considers morphological features, such as case, gender or the tense of verbs.

** DRAFT Creating a blog using ox-hugo, org mode and github pages
:PROPERTIES:
:EXPORT_FILE_NAME: blog-creation
:END:

So I was going to make this post explaining how I made this blog but it was rendered pretty useless by [[https://dev.to/usamasubhani/setup-a-blog-with-hugo-and-github-pages-562n][this.]] So yeah, I might archive this post later.

1. Install hugo from your package manager.
2. Create a new site:
   #+begin_src sh
hugo new site blog
   #+end_src
3. Add a theme:
   #+begin_src sh
cd blog
git init
git submodule add <theme_url> themes/<name>
   #+end_src
4. Install ox-hugo in emacs
   #+begin_src emacs-lisp
;; goes in packages.el
(package! ox-hugo)

;; goes in config.el
(use-package ox-hugo
  :after ox)
   #+end_src
5. TODO Explain the process of content and properties, tags etc.
6. Export
7. Config.toml (theme, title, url, publishdir, etc)
8. Run server, check localhost.
9. Push
10. Go to GitHub repository Settings > GitHub pages. Select /docs in Source.
11. Voila!
