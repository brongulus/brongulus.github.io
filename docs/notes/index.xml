<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on bacchanalian madness</title>
    <link>http://localhost:1313/notes/</link>
    <description>Recent content in Notes on bacchanalian madness</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Mar 2023 14:35:46 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hangul</title>
      <link>http://localhost:1313/notes/korean/</link>
      <pubDate>Wed, 06 Jul 2022 00:00:00 +0530</pubDate>
      <guid>http://localhost:1313/notes/korean/</guid>
      <description>&lt;p&gt;Hangul is one of the easiest character form to learn, in fact people proclaim it can be learnt in under an hour with the help of easy mnemonics, let&amp;rsquo;s see how.&lt;/p&gt;&#xA;&lt;div class=&#34;note&#34;&gt;&#xA;&lt;p&gt;I still have to cover more vowels and add tips for pronounciation which I&amp;rsquo;ll add soon.™&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;consonants&#34;&gt;Consonants&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Consonant&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Pron.&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Mnemonic&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Aspirated&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Pron.&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Mnemonic&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅂ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;bucket&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅍ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;p&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;part II/pi&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㄷ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;d&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;door&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅌ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;t&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;two doors&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㄱ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;g&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;gun&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅋ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;k&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;kill&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅈ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;j&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;(jug)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅊ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ch&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;church&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Consonant&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Pron.&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Mnemonic&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅎ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;h&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;hat&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㄹ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;r/l&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;rattlesnake&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅁ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;m&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;mouth&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㄴ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;n&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;nose&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅅ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;standing&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ㅇ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;- / ng(at end)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;zero = no&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Look at the last consonant, it&amp;rsquo;s a placeholder character which has no sound by itself &lt;em&gt;but&lt;/em&gt; if it ends a particular syllable, it is pronounced as &lt;strong&gt;ng&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elements of computing systems</title>
      <link>http://localhost:1313/notes/elements-of-computing-systems/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0530</pubDate>
      <guid>http://localhost:1313/notes/elements-of-computing-systems/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;These are the notes which I took while studying computer architecture from the textbook &amp;ldquo;&lt;em&gt;The Elements of Computing Systems&lt;/em&gt; by &lt;em&gt;Noam Nisan &amp;amp; Shimon Schocken&lt;/em&gt; &amp;ldquo;. They&amp;rsquo;re very terse and have very opinionated content from the textbook so they should only be used in tandem with it for revision purposes.&#xA;&lt;a href=&#34;http://localhost:1313/ox-hugo/ecs-1.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/ox-hugo/ecs-1.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;The text program is parsed, its semantics are uncovered, it&amp;rsquo;s represented in some low-level language that the computer can understand. This process is called &lt;em&gt;compilation&lt;/em&gt;. Its result is another text file, containing machine-level code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IUSACO</title>
      <link>http://localhost:1313/notes/iusaco-notes/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0530</pubDate>
      <guid>http://localhost:1313/notes/iusaco-notes/</guid>
      <description>&lt;h2 id=&#34;input-and-output&#34;&gt;Input and Output&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;freopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;template.in&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;freopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;template.out&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;When using C++, arrays should be declared globally, or initialized to zeros if declared locally to avoid garbage values.&lt;/li&gt;&#xA;&lt;li&gt;32bit int: \(\pm 2\times10^{9}\) v/s 64bit int: \(\pm 9\times 10^{18}\)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;complexity-and-algorithm-analysis&#34;&gt;Complexity and algorithm analysis&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Elementary mathematical calculation: O(1)&lt;/li&gt;&#xA;&lt;li&gt;Unordered set/map: O(1) per operation&lt;/li&gt;&#xA;&lt;li&gt;Binary Search: O(log n)&lt;/li&gt;&#xA;&lt;li&gt;Ordered set/map or Priority Queue: O(log n) per operation&lt;/li&gt;&#xA;&lt;li&gt;Prime factorization or primality check for int: \(O(\sqrt{n})\)&lt;/li&gt;&#xA;&lt;li&gt;Reading n inputs: O(n)&lt;/li&gt;&#xA;&lt;li&gt;Iterating through n element array: O(n)&lt;/li&gt;&#xA;&lt;li&gt;Sorting: Usually O(n log n) for &lt;code&gt;std::sort()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Iterating through all subsets of size k of input elements: O(\(n^{k}\) ), for triplets O(\(n^{3}\))&lt;/li&gt;&#xA;&lt;li&gt;Iterating through all subsets: O(\(2^{n}\))&lt;/li&gt;&#xA;&lt;li&gt;Iterating through all permutations: O(n!)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;built-in-data-structures&#34;&gt;Built-in Data Structures&lt;/h2&gt;&#xA;&lt;p&gt;Data Structure determines how data is stored, each supports some operations efficiently. In following discussion, desired data type is put between &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;. Most std structures support &lt;code&gt;size()&lt;/code&gt; and &lt;code&gt;empty()&lt;/code&gt; methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Meditations</title>
      <link>http://localhost:1313/notes/meditations/</link>
      <pubDate>Mon, 14 Mar 2022 00:00:00 +0530</pubDate>
      <guid>http://localhost:1313/notes/meditations/</guid>
      <description>&lt;h2 id=&#34;book-2-on-the-river-gran-among-the-quadi&#34;&gt;Book 2: On the River Gran, Among the Quadi&lt;/h2&gt;&#xA;&lt;p&gt;And so none of them can hurt me. No one can implicate me in ugliness. Nor can I feel angry at my relative, or hate him. We were born to work together like feet, hands, and eyes, like the two rows of teeth, upper and lower. To obstruct each other is unnatural. To feel anger at someone, to turn your back on him: these are obstructions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
